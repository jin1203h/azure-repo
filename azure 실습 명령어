azure 교육 

- Medeling

- Docker / Kubernetes

workflowy
https://workflowy.com/s/msa/27a0ioMCzlpV04Ib#/69f581576ade




- CI/CD

workflowy
https://workflowy.com/s/msa/27a0ioMCzlpV04Ib#/504832b9256d

azure portal 계정( http://portal.azure.com)
ID : admin23@gkn2021hotmail.onmicrosoft.com
PW : skcc123!

 1.구독생성 ( 종량제 )
 2. 리소스그룹 생성( admin24-rsrcgrp )
 3. 컨테이너 레지스트리 생성 ( admin24 )
 4. Kubenetes 서비스 생성 ( admin24-aks )
 5. Terminal 연결
 6. az login ( http://microsoft.com/devicelogin => 화면 코드 입력 )
 7. AzureCloud 연결정보 확인
 8. 입력 ( az aks get-credentials --resource-group admin24-rsrcgrp --name admin24-aks )
 9. 확인( Merged "admin24-aks" as current context in /root/.kube/config )
10. 입력 ( kubectl config current-context )
11. 확인 ( admin24-aks )
12. acr 과 aks 연결 ( az aks update -n admin24-aks -g admin24-rsrcgrp --attach-acr admin24 )
13. 입력 ( kubectl get all )
14. 확인 ( service/kubernetes )
15. DevOps Starter 생성 ( admin24-devops )
16. admin24-devops-CI 생성
17. admin24-devops-CD 생성

- CNA(Cloud Native Architecture)

white board tool
모든 데이터를 가지고 있을 것인가?
sigle view ??
화면부터 mocroservice 단위로 쪼개기?
마이페이지를 나중에 만드는 경우?

github.com/event-storming/docs

CNA 온라인 Lab 교재 : msaschool.io
이벤트스토밍 : msaez.io
Windows : JDK, IntelliJ, httpie, ubuntu
CNA 클라우드 실행환경 : Local Ubuntu 18.04
https://httpie.org/run


aggregate : Product
commend : ProductRepository
event : ProductChanged

netstat -ano | findstr "PID :808"
taskkill /pid 실제PID /f


msaez modeling
trigger / attribute  setting
code download

zookeeper / kafka run

itelliJ
Maven : order > Plugins > spring-boot > spring-bootrun

httpie
http POST http://localhost:8081/orders productId=20 qty=2


동기로 호출되는 경우
order : external 추가됨
비동기로 호출되는 경우
deliveery : ordered 추가됨

@FeignClient(name="delivery", url="${api.url.delivery}")


https://portal.azure.com/
admin19@gkn2021hotmail.onmicrosoft.com
skcc123!

ubuntu 에서 
-azure client 설치
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
pw : skccadmin1234!
-azure client login
az login -u admin19@gkn2021hotmail.onmicrosoft.com -p skcc123!
-kubectl 설치 확인

호출 관련 확인을 위한 job
kubectl create deploy my-nginx --image=nginx
kubectl create deploy my-nginx2 --image=nginx
kubectl expose deploy my-nginx --port=80  (my-nginx service 생성)
kubectl exec

my-nginx2 로 들어가서 my-nginx (service) 호출 
kubectl exec -it pod/my-nginx2-9874d5f6d-j6b9h -- /bin/bash
curl http://my-nginx
curl http://my-nginx.default
curl http://my-nginx.default.svc.cluster.local
url 호출 (위의 3개가 모두 다 같은 결과)



